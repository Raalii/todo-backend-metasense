datasource db {
  provider = "sqlite" // adapt. si Postgres / MySQL
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         String     @id @default(uuid())
  email      String     @unique
  name       String?
  hashedPassword    String
  tasks      Task[]
  projects   Project[]
  categories Category[]
  statuses   Status[]

  @@map("users")
}

model Project {
  id     String @id @default(uuid())
  name   String
  userId String
  user   User   @relation(fields: [userId], references: [id])
  tasks  Task[]

  @@map("projects")
}

model Status {
  id        String   @id @default(uuid())
  name      String
  color     String   @default("#d3d3d3") // badge couleur
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  tasks     Task[]
  createdAt DateTime @default(now()) // pour trier par cr√©ation si besoin

  @@unique([userId, name])
  @@map("statuses")
}

model Category {
  id           String         @id @default(uuid())
  name         String
  color        String         @default("#8e8e8e")
  userId       String
  user         User           @relation(fields: [userId], references: [id])
  tasks        Task[]         @relation("TaskCategories")
  TaskCategory TaskCategory[]

  @@unique([userId, name])
  @@map("categories")
}

model Task {
  id           String         @id @default(uuid())
  title        String
  description  String?
  userId       String
  projectId    String? // nullable  = hors-projet
  statusId     String // FK vers Status
  user         User           @relation(fields: [userId], references: [id])
  project      Project?       @relation(fields: [projectId], references: [id])
  status       Status         @relation(fields: [statusId], references: [id])
  categories   Category[]     @relation("TaskCategories")
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  TaskCategory TaskCategory[]

  @@index([projectId])
  @@map("tasks")
}

model TaskCategory {
  taskId     String
  categoryId String
  task       Task     @relation(fields: [taskId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])

  @@id([taskId, categoryId])
  @@map("task_categories")
}
